@using WebMatrix.Data

@{
    // Check for session
    if (Session["id_user"] != null)
    {
        Response.Redirect("~/Profile.cshtml");
    }

    // Validate form input
    Validation.Add("firstname", Validator.StringLength(50, 1, "Voornaam niet geldig"));
    Validation.Add("lastname", Validator.StringLength(50, 1, "Achternaam niet geldig"));
    Validation.Add("username", Validator.StringLength(25, 3, "Username moet tussen de 3 en 25 karakters zijn"));
    Validation.Add("password", Validator.StringLength(50, 3, "Wachtwoord tussen 3 en 50 karakters"));
    Validation.Add("mail", Validator.StringLength(50, 3, "Email is niet geldig"));

    // Database connection
    var db = Database.Open("HarryPotter");

    // Post and validate
    if (IsPost && Validation.IsValid())
    {
        // Request values out of form
        string firstname = Request.Form["firstname"];
        string lastname = Request.Form["lastname"];
        string username = Request.Form["username"];
        string password = Request.Form["password"];
        string email = Request.Form["mail"];

        // Check if username is already taken
        var check_username = db.QuerySingle("Select * from Users where username = @0", username);

        // Insert new user query if username is not taken!
        string insert = "INSERT INTO Users (firstname, lastname, username, email, password) VALUES (@0, @1, @2, @3, @4)";
        if (check_username == null)
        {
            db.Execute(insert, firstname, lastname, username, email, password);
            // Login and get session data
            var setCookie = db.QuerySingle("SELECT user_id, username, password FROM Users WHERE username = @0 AND password = @1", username, password);

            // After sussesvol registration, set session and redirect
            Session["id_user"] = setCookie.user_id;
            Response.Redirect("~/profile.cshtml");
        }
        else
        {
            // If username is taken, show error message
            ModelState.AddFormError("Gebruikersnaam al in gebruik");
        }
    }

}
@RenderPage("~/Layout/header.cshtml")

<div class="container">
    <div class="row">
        <div class="auth-form-title">
            <h1>Registreer</h1>
        </div>
        <div class="auth-inner">
            <div class="auth-form">
                <form method="post">

                    <label class="top-validation-wrong">
                        @Html.ValidationSummary("Gebruiker niet aangemaakt, probeer het overnieuw", excludeFieldErrors: true, htmlAttributes: null)
                    </label>

                    <div class="form-details">
                        <label class="firstname">
                            <input type="text" name="firstname" placeholder="Naam" id="firstname" value="@Request.Form["firstname"]">
                        </label>
                        <label class="validation-wrong">@Html.ValidationMessage("firstname")</label>
                        <label class="lastname">
                            <input type="text" name="lastname" placeholder="Achternaam" id="lastname" value="@Request.Form["lastname"]">
                        </label>
                        <label class="validation-wrong">@Html.ValidationMessage("lastname")</label>
                        <label class="user">
                            <input type="text" name="username" placeholder="Gebruikersnaam" id="username" value="@Request.Form["username"]">
                        </label>
                        <label class="validation-wrong">@Html.ValidationMessage("username")</label>
                        <label class="mail">
                            <input type="text" name="mail" placeholder="E-mail" id="mail" value="@Request.Form["mail"]">
                        </label>
                        <label class="validation-wrong">@Html.ValidationMessage("mail")</label>
                        <label class="password">
                            <input type="password" name="password" placeholder="Wachtwoord" id="password" value="@Request.Form["password"]">
                        </label>
                        <label class="validation-wrong">@Html.ValidationMessage("password")</label>
                    </div>
                    <button type="submit" class="form-btn">Registreer</button>
                </form>
            </div>
        </div>
    </div>
</div>

@RenderPage("~/Layout/footer.cshtml")