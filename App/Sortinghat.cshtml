@{
    Page.Title = "Sorting Hat";

    if (Session["id_user"] == null)
    {
        Response.Redirect("~/Login");
    }

    // Fetch sortinghat questions
    List<Question> questions = Data.GetQuestions();

    // Housepoints
    string houseChosen = null;
    int pointsGryffindor = 0;
    int pointsHufflepuff = 0;
    int pointsRavenclaw = 0;
    int pointsSlytherin = 0;

    if (IsPost)
    {
        // Foreach through post request
        foreach (string s in Request.Form.Keys)
        {
            Dictionary<string, int> housePointPair = Data.GetAnswer(Request.Form[s].AsInt()).GetHousePointPair();
            pointsGryffindor += housePointPair.Values.ElementAt(0);
            pointsHufflepuff += housePointPair.Values.ElementAt(1);
            pointsRavenclaw += housePointPair.Values.ElementAt(2);
            pointsSlytherin += housePointPair.Values.ElementAt(3);
        }

        Sortinghat sortinghat = new Sortinghat();
        int userId = Convert.ToInt32(Session["id_user"]);
        houseChosen = sortinghat.Sort(new Dictionary<string, int> { { "Gryffindor", pointsGryffindor }, { "Hufflepuff", pointsHufflepuff },
    { "Ravenclaw", pointsRavenclaw }, { "Slytherin", pointsSlytherin } }, userId);
    }

}

@RenderPage("~/Layout/Header.cshtml")

<div class="container">
    <div class="row">
        <div class="col-sm-1"></div>
        <div class="col-sm-10">
            <h1>Welcome</h1>
            <h3>Sortinghat</h3>

            <div id="intro">
                <div class="content-container">
                    <p>I am the Sortinghat from Hogwarts School of Witchcraft and Hocus Pocus. Also this year I sort all students to their true house.</p>
                </div>
            </div>

            @if (houseChosen != null)
            {
                <h3>Your house: @houseChosen</h3>
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Gryffindor</th>
                            <th scope="col">Hufflepuff</th>
                            <th scope="col">Ravenclaw</th>
                            <th scope="col">Slytherin</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@pointsGryffindor</td>
                            <td>@pointsHufflepuff</td>
                            <td>@pointsRavenclaw</td>
                            <td>@pointsSlytherin</td>
                        </tr>
                    </tbody>
                </table>
            }
            else
            {
                <form method="POST" id="form">
                    @{
                        int count = 0;
                        foreach (Question question in questions)
                        {
                            count++;
                            // Get question's answers
                            List<Answer> answers = Data.GetAnswers(question.GetQuestionId());

                            <div id="question_@count" class="form-group">
                                <img src="~/assets/img/Questions/@question.GetQuestionId()_.png"  />
                                <h2>@question.GetQuestion()</h2>

                                @foreach (Answer answer in answers)
                                {
                                <div class="radio">
                                    <object data="~/assets/img/Answers/@answer.GetAnswerId()_.png" 
                                        <style>img:before {background-image: url(/assets/img/Answers/5_.png);
                                        </style>
                                        <img src="foo.jpg" >
                                        <img src="~/assets/img/Answers/@answer.GetAnswerId()_.gif" 
                                    </object>
                                    <label><input type="radio" name="question_@answer.GetQuestionId()" value="@answer.GetAnswerId()">@answer.GetAnswer()</label>
                                </div>
                                }
                                @if (count > 1)
                                {
                                    <span class="btn btn-primary" onclick="OpenQuestion(this, 'prev')">Previous question</span>
                                }
                                @if (count < questions.Count)
                                {
                                    <span class="btn btn-primary" onclick="OpenQuestion(this, 'next')">Next question</span>
                                }
                                @if (count == questions.Count)
                                {
                                    <input type="submit" onclick="return ValidateForm()" class="btn btn-success" value="Sort me!" />
                                }
                            </div>
                        }
                    }

                </form>
            }

        </div>
        <div class="col-sm-1"></div>
    </div>
</div>

@RenderPage("~/Layout/Footer.cshtml")

<script>
    function OpenQuestion(obj, direction) {
        var parent = $(obj).parent();
        questionId = $(parent)[0].id.split("_")[1];

        // Hide current question
        $('#question_' + questionId).css("display", "none");

        // Show next or previous question
        if (direction == 'next') {
            questionId++;
        } else {
            questionId--;
        }
        $('#question_' + questionId).css("display", "block");
    }

    function ValidateForm() {
        var allQuestionsAnswered = true;

        $("div[id^='question_']").each(function (i) {
            var selected = false;

            $(this).children('.radio').each(function (i) {
                var element = $($(this).children()).find('input')[0]
                if (element.checked) {
                    selected = true;
                }
            });

            if (selected == false) {
                $(this).append('<div class="alert alert-danger" role="alert">Please select an answer</div>');
                allQuestionsAnswered = false;
            }
        });

        if (allQuestionsAnswered == false) {
            $('#notifyUnanswered').remove();
            $('#form').append('<div id="notifyUnanswered" class="alert alert-danger" role="alert">One or more questions are unanswered</div>');
        }

        return allQuestionsAnswered;
    }

    $(document).ready(function () {
        $("div[id^='question_']").css("display", "none");
        $('#question_1').css("display", "block");
    });
</script>