@using WebMatrix.Data
@using Homework

@{
    // Check for session
    if (Session["id_user"] == null)
    {
        Response.Redirect("~/Login.cshtml");
    }

    // Check role
    int userId = Convert.ToInt32(Session["id_user"]);
    User user = new User();
    user = user.GetUser(userId);
    if (user.GetRole() != "Teacher" && user.GetRole() != "Headmaster")
    {
        Response.Redirect("~/Profile");
    }

    // Fetch classes
    List<Class> classes;
    if (user.GetRole() == "Headmaster")
    {
        classes = Class.GetClasses();
    }
    else
    {
        classes = Class.GetMyClasses(userId);
    }

    // Setting variables
    int lastQuestionId;
    string lastAnswer = null;

    var db = Database.Open("HarryPotter");
    List<User> students = user.GetUsersByRole(1);
    List<User> teachers = user.GetUsersByRole(2);
    List<User> headmasters = user.GetUsersByRole(3);
    db.Dispose();

    // Update wizard as teacher
    if (!Request.QueryString["asign_wizard"].IsEmpty() && Request.QueryString["asign_wizard"].IsInt())
    {
        int asignAs = Request.QueryString["asign_wizard"].AsInt();
        user.AssignUser(asignAs, 2);

        Response.Redirect("~/Management.cshtml");
    }

    // Update teacher as headmaster
    if (!Request.QueryString["asign_teacher"].IsEmpty() && Request.QueryString["asign_teacher"].IsInt())
    {
        int asignAs = Request.QueryString["asign_teacher"].AsInt();
        user.AssignUser(asignAs, 3);
        Response.Redirect("~/Management.cshtml");
    }

    // Form handling
    if (IsPost)
    {
        switch (Request["form_type"])
        {
            case "add_homework":
                int homeworkId = Homework.GetMaxHomeworkId();
                if (homeworkId == 0)
                {
                    homeworkId = 1;
                }
                else
                {
                    homeworkId++;
                }

                List<Question> questions = new List<Question>();
                List<Answer> answers = new List<Answer>();

                // Foreach through post request
                foreach (string s in Request.Form.Keys)
                {
                    // Response.Write(s.ToString() + ":" + Request.Params[s] + "<br>");
                    if (s.ToString().Contains("question"))
                    {
                        string[] tokens = s.ToString().Split('_');
                        var var1 = tokens;
                        questions.Add(new Question(tokens.ElementAt(1).AsInt(), Request.Params[s], homeworkId));
                    }
                    if (s.ToString().Contains("answer"))
                    {
                        string[] tokens = s.ToString().Split('_');
                        lastQuestionId = tokens.ElementAt(1).AsInt() + Question.GetMaxQuestionId();
                        lastAnswer = Request.Params[s];
                    }
                    if (s.ToString().Contains("scoring"))
                    {
                        string[] tokens = s.ToString().Split('_');
                        lastQuestionId = tokens.ElementAt(1).AsInt();
                        answers.Add(new Answer(lastQuestionId, lastAnswer, Request.Params[s].AsInt(), homeworkId));
                    }
                }

                // Insert assigment
                var dateTime = Convert.ToDateTime(Request.Form["deadline_date"] + " " + Request.Form["deadline_time"]);
                Homework.InsertHomework(Request.Form["description"], Request.Form["class"].AsInt(), dateTime);

                // Insert questions
                foreach (Question question in questions)
                {
                    question.InsertQuestion();
                }

                // Insert answers
                foreach (Answer answer in answers)
                {
                    answer.InsertAnswer();
                }
                break;
            case "add_class":

                // Validation requirefield
                Validation.RequireField("class");

                if (Validation.IsValid())
                {
                    // Request values out Form
                    string className = Request.Form["class"];
                    string classDescription = Request.Form["class_description"];

                    // Check if class is created
                    var addClass = db.QuerySingle("SELECT classname FROM classes WHERE classname = @0 ", className);
                    if (addClass == null)
                    {
                        Class.InsertClass(className, classDescription);
                        Response.Redirect("~/Classes.cshtml");
                    }
                    else
                    {
                        // Error message if credentials are incorrect
                        ModelState.AddFormError("Class already created");
                    }

                    db.Dispose();
                }
                break;
            case "assign_teacher":
                int classId = Request.Form["class_to_assign"].AsInt();
                int teacherId = Request.Form["teacher_to_assign"].AsInt();
                if (teacherId > 0 && classId > 0)
                {
                    Class.AssignTeacherToClass(teacherId, classId);
                }
                break;
        }

    }

}

@RenderPage("~/Layout/Header.cshtml")

<div class="container">
    <h1>Management</h1>
    @if (user.GetRole() == "Headmaster")
            {
        <div class="row">
            <h2>Classes</h2>
            <form method="post">
                <input type="hidden" name="form_type" value="add_class" />
                <div class="form-details">
                    <label class="class">
                        <input type="text" name="class" placeholder="Classname" class="form-control" value="@Request.Form["class"]">
                    </label>
                    <label class="class">
                        <input type="text" name="class_description" placeholder="Class description" class="form-control" value="@Request.Form["class_description"]">
                    </label>
                    <label class="validation-wrong">@Html.ValidationSummary()</label>
                </div>
                <button type="submit" class="btn btn-default">Create class</button>
            </form>
        </div>
        <div class="row">
            <h2>Students</h2>
            <p>Assign students as teacher</p>
            <ul>
                @foreach (User student in students)
                {
                    <li id="item">@student.GetFullName() | <a href="Management.cshtml?asign_wizard=@student.GetUserId()" class="list-link">assign</a></li>
                }
            </ul>
            <h2>Teachers</h2>
            <p>Approve teacher as headmaster</p>
            <ul>
                @foreach (var teacher in teachers)
                {
                    <li id="item">@teacher.GetFullName() | <a href="Management.cshtml?asign_teacher=@teacher.GetUserId()" class="list-link">assign</a></li>
                }
            </ul>
            <h3>Assign teacher to class</h3>
            <form method="POST">
                <input type="hidden" name="form_type" value="assign_teacher" />
                <label for="class_to_assign">Class</label>
                <select name="class_to_assign" id="class_to_assign" class="form-control">
                    @foreach (Class classroom in Class.GetClasses())
                    {
                        <option value="@classroom.GetClassId()">@classroom.GetClassname()</option>
                    }
                </select>
                <label for="teacher_to_assign">Teacher</label>
                <select name="teacher_to_assign" id="teacher_to_assign" class="form-control">
                    @foreach (User teacher in teachers)
                    {
                        <option value="@teacher.GetUserId()">@teacher.GetFullName()</option>
                    }
                </select>
                <br />
                <input type="submit" class="btn btn-success" value="Assign teacher" />
            </form>
            <h2>Headmasters</h2>
            <p>List of headmasters</p>
            <ul>
                @foreach (var headmaster in headmasters)
    {
                    <li id="item">@headmaster.GetFullName()</li>
                }
            </ul>
        </div>
    }
    <div class="row">
        <h2>Homework</h2>
        <h3>Add homework</h3>
        <form method="POST">
            <input type="hidden" name="form_type" value="add_homework" />
            <table class="table" id="tblHomework">
                <tr>
                    <td>
                        <label for="class">Class</label>
                        <select name="class" id="class" class="form-control">
                            @foreach (Class classroom in classes)
    {
                    <option value="@classroom.GetClassId()">@classroom.GetClassname()</option>
    }
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for="description">Homework description</label>
                        <input type="text" name="description" class="form-control" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for="deadline_date">Homework deadline date</label>
                        <input type="date" name="deadline_date" id="deadline_date" class="form-control" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for="deadline_time">Homework deadline time</label>
                        <input type="time" name="deadline_time" id="deadline_time" class="form-control" />
                    </td>
                </tr>
                <tr><th><h4>Question 1</h4></th></tr>
                <tr>
                    <td>
                        <label for="question_1_content">Question 1</label>
                        <textarea class="form-control" id="question_1_content" name="question_1_content" rows="2"></textarea>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for="answer_1_1">Answer 1</label>
                        <textarea class="form-control" id="answer_1_1" name="answer_1_1" rows="2"></textarea>
                    </td>
                    <td>
                        <label for="scoring_1_1">Scoring points</label>
                        <input type="number" class="form-control" id="scoring_1_1" name="scoring_1_1" min="1" max="100" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for="answer_1_2">Answer 2</label>
                        <textarea class="form-control" id="answer_1_2" name="answer_1_2" rows="2"></textarea>
                    </td>
                    <td>
                        <label for="scoring_1_2">Scoring points</label>
                        <input type="number" class="form-control" id="scoring_1_2" name="scoring_1_2" min="1" max="100" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for="answer_1_3">Answer 3</label>
                        <textarea class="form-control" id="answer_1_3" name="answer_1_3" rows="2"></textarea>
                    </td>
                    <td>
                        <label for="scoring_1_3">Scoring points</label>
                        <input type="number" class="form-control" id="scoring_1_3" name="scoring_1_3" min="1" max="100" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for="answer_1_4">Answer 4</label>
                        <textarea class="form-control" id="answer_1_4" name="answer_1_4" rows="2"></textarea>
                    </td>
                    <td>
                        <label for="scoring_1_4">Scoring points</label>
                        <input type="number" class="form-control" id="scoring_1_4" name="scoring_1_4" min="1" max="100" />
                    </td>
                </tr>
            </table>
            <div class="btn btn-default" id="btnAddQuestion">Add question</div>
            <input type="submit" class="btn btn-success" value="Add homework" />
        </form>
    </div>
</div>

@RenderPage("~/Layout/Footer.cshtml")

<script>
    $(document).ready(function () {
        // $("div[id^='question_']").css("display", "none");
        $('#btnAddQuestion').on('click', function () {

            var questionNumber = $('#tblHomework tbody tr').last().find('td textarea')[0].id.split("_")[1];
            questionNumber++;
            var appendString = '<tr><th><h4>Question ' + questionNumber + '</h4></th></tr><tr><td><label for="question_' + questionNumber + '_content">Question ' + questionNumber + '</label><textarea class="form-control" id="question_' + questionNumber + '_content" name="question_' + questionNumber + '_content" rows="2"></textarea></td></tr><tr><td><label for="answer_' + questionNumber + '_1">Answer 1</label><textarea class="form-control" id = "answer_' + questionNumber + '_1" name ="answer_' + questionNumber + '_1" rows="2"></textarea></td><td><label for="scoring_' + questionNumber + '_1">Scoring points</label><input type="number" class="form-control" id="scoring_' + questionNumber + '_1" name="scoring_' + questionNumber + '_1" min="1" max="100" /></td></tr><tr><td><label for="answer_' + questionNumber + '_2">Answer 2</label><textarea class="form-control" id="answer_1_2" name="answer_' + questionNumber + '_2" rows="2"></textarea></td><td><label for="scoring_' + questionNumber + '_2">Scoring points</label><input type="number" class="form-control" id="scoring_1_2" name="scoring_' + questionNumber + '_2" min="1" max="100" /></td></tr><tr><td><label for="answer_' + questionNumber + '_3">Answer 3</label><textarea class="form-control" id="answer_' + questionNumber + '_3" name="answer_' + questionNumber + '_3" rows="2"></textarea></td><td><label for="scoring_' + questionNumber + '_3">Scoring points</label><input type="number" class="form-control" id="scoring_' + questionNumber + '_3" name="scoring_' + questionNumber + '_3" min="1" max="100" /></td></tr><tr><td><label for="answer_' + questionNumber + '_4">Answer 4</label><textarea class="form-control" id="answer_' + questionNumber + '_4" name="answer_' + questionNumber + '_4" rows="2"></textarea></td><td><label for="scoring_' + questionNumber + '_4">Scoring points</label><input type="number" class="form-control" id="scoring_' + questionNumber + '_4" name="scoring_' + questionNumber + '_4" min="1" max="100" /></td></tr>';

            $('#tblHomework').append(appendString);
        });

    });

</script>